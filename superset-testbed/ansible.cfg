# Ansible searches for configuration files in the following order, 
# processing the first file it finds and ignoring the rest:
#
#   $ANSIBLE_CONFIG if the environment variable is set.
#   ansible.cfg if it’s in the current directory.
#   ~/.ansible.cfg if it’s in the user’s home directory.
#   /etc/ansible/ansible.cfg, the default config file.
#
[defaults]
# Disable host key checking. If a host is not initially in ‘known_hosts’ this
# will result in prompting for confirmation of the key, which results in an
# interactive experience 
host_key_checking = False

# This is the default SSH timeout to use on connection attempts.
timeout = 30

# This options forces color mode even when running without a TTY.
force_color = 1

# Number of parallel processes to spawn when 
# communicating with remote hosts. 
forks = 10

# plays will gather facts by default, which contain information about
# the remote system.
# smart - gather by default, but don't regather if already gathered each new 
#         host that has no facts discovered will be scanned, but if the same 
#         host is addressed in multiple plays it will not be.
# implicit - gather by default, turn off with gather_facts: False
# explicit - do not gather by default, must say gather_facts: True
gathering = smart
# Disable gathering for testing time
#gathering = explicit

# Ansible will log information about executions at the designated location
log_path=ansible/ansible.log

# The retry files save path is where Ansible will save .retry files when a
# playbook fails. The directory will be created if it does not already exist.
retry_files_save_path = ansible/retry-files

# Play execution strategies: Plays execution control for many hosts, controls
# how plays run their multiple hosts. 
#
# linear (default): All hosts of a play have to finish one task before any of them can 
#                   begin the next one. Using the number of forks (default 5)
#                   to parallelize.
# serial: Ensures one group of hosts in a play finishes its work before another group 
#         can begin. This strategy will take a subset of hosts (the default is
#         five) and execute all tasks (in the linear fashion) against those 
#         hosts before moving to the next subset and starting from the beginning.
# free: Allows each host to run until the end of the play as fast as it can.
#       Allows all hosts to run independently of each other. “free” lets each
#       host run independently, starting its next task as soon as it finishes
#       the previous one, regardless of how far other hosts have gotten.
#
# By default Ansible will attempt to run on all hosts from a play in parallel.
# With the serial strategy ansible will attempt to run on by defauult 5 of the
# play.
# It is designed so that each task will be run on all hosts before continuing on
# to the next task. So if you have 3 tasks it will ensure task 1 runs on all
# your hosts first, then task 2 is run, then task 3 is run. This is the "linear"
# strategy.
# Each play contains a list of tasks. Tasks are executed in order, one at a
# time, against all machines matched by the host pattern of the play, before moving on to
# the next task. It is important to understand that, within a play, all hosts
# are going to get the same task directives. It is the purpose of a play to map
# a selection of hosts to tasks.
